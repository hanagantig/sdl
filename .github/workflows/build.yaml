name: Deploy Invoices

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io


jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Copy docker-compose to server
        run: |
          scp -o StrictHostKeyChecking=no .docker/docker-compose.yaml ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }}:${{ vars.PROJECT_PATH }}/docker-compose.yaml

      - name: Copy configs to server
        run: |
          scp -o StrictHostKeyChecking=no .docker/nginx/conf/default.conf ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }}:${{ vars.PROJECT_PATH }}/default.conf

      - name: Build Python
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/sdl-admin:${{ steps.vars.outputs.sha_short }}

      - name: Build Nginx
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.docker/nginx/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/sdl-nginx:${{ steps.vars.outputs.sha_short }}

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }} << 'EOF'
            echo "CI_COMMIT_SHORT_SHA=${{ steps.vars.outputs.sha_short }}" > ${{ vars.PROJECT_PATH }}/.env
            echo "DB_NAME='${{ vars.DB_NAME }}'" >> ${{ vars.PROJECT_PATH }}/.env
            echo "DB_HOST='${{ vars.DB_HOST }}'" >> ${{ vars.PROJECT_PATH }}/.env
            echo "DB_PORT='${{ vars.DB_PORT }}'" >> ${{ vars.PROJECT_PATH }}/.env
            echo "DB_USER='${{ vars.DB_USER }}'" >> ${{ vars.PROJECT_PATH }}/.env
            echo "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> ${{ vars.PROJECT_PATH }}/.env
          
            cd ${{ vars.PROJECT_PATH }}
            
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username ${{ github.actor }} --password-stdin
            docker-compose pull
            docker-compose down
            docker-compose up -d --force-recreate
          EOF